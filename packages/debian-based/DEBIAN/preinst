#!/bin/sh -e

# $1 ==> 'install' or 'upgrade'
# $2 ==> nil or 'version installed'
# $3 ==> nil or 'version upgrading'

# Function to compare versions in Debian preinst script
# Parameters:
#   $1 - Action being performed (install, upgrade, etc.)
#   $2 - Currently installed version (empty if not installed)
#   $3 - New version being installed
preinst_version_check() {
    action="$1"
    current_version="$2"
    new_version="$3"

    echo "Running pre-installation checks..."
    # Check if this is an upgrade
    if [ "$action" = "upgrade" ] && [ -n "$current_version" ]; then
        echo "Performing version comparison..."

        # Use dpkg to compare versions (Debian/Ubuntu proper method)
        if dpkg --compare-versions "$current_version" gt "$new_version"; then
            echo "Error: Downgrade detected ($current_version -> $new_version)" >&2
            echo "Downgrades must be forced with --force-downgrades" >&2
            return 1
        fi

    elif [ "$action" = "install" ] && [ -n "$current_version" ]; then
        echo "Error: Package already installed (version $current_version)" >&2
        return 2
    fi

    echo "Pre-installation checks completed successfully"
    return 0
}

echo "Stopping csghub services..."
if systemctl is-active --quiet csghub-runsvdir.service; then
    echo "Service csghub-runsvdir.service is active, stopped."
    systemctl stop csghub-runsvdir.service || true
else
    echo "Service csghub-runsvdir.service is not active."
fi

case "$1" in
  install)
    rm -rf /opt/csghub || true
    ;;

  upgrade)
    preinst_version_check "$1" "$2" "$3"

    echo "Backup configuration files..."
    if [ -e /etc/csghub.bak ]; then
      rm -rf /etc/csghub.bak || true
    fi
    cp -af /etc/csghub /etc/csghub.bak

    echo "Remove executables..."
    if [ -e /opt/csghub ]; then
      rm -rf /opt/csghub || true
    fi
    ;;

  abort-upgrade)
    ;;

  *)
    echo "preinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

exit 0
