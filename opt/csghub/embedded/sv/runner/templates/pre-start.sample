#!/bin/bash

# Redirect stderr -> stdout
exec 2>&1

# Exit if execute with any errors
set -e

# Isn't it strange to have two CDs connected here?
# There must be a reason for their existence. Don't move them.
{{- $chome := "/opt/csghub" }}
{{- $envDir := printf "%s/etc/runner/env" $chome }}
cd {{ $chome }}
{{- file.Write (printf "%s/KUBECONFIG" $chome) "/etc/csghub/.kube/config" }}

{{- $server := (datasource "config").server }}
{{- $db := $server.postgresql }}
{{- $password := $db.password | default (crypto.PBKDF2 $db.user "opencsg" 2048 8) }}
{{- $postgresql := (datasource "config").postgresql }}
{{- $patroni := (datasource "config").patroni }}
{{- if or $postgresql.enable $patroni.enable }}
# Create server database (current default)
/opt/csghub/bin/csghub-dbm -a create -d {{ $db.name }} -u {{ $db.user }} -p {{ $password }}
# If server database exists reset all objects owner to current db user
/opt/csghub/bin/csghub-dbm -a update -d {{ $db.name }} -N {{ $db.user }}
{{- end }}

{{- $logDir := "/var/log/csghub/runner" }}
{{- if has (datasource "config").runner "log" }}
{{- if has (datasource "config").runner.log "dir" }}
{{- if (datasource "config").runner.log.dir }}
{{- $logDir = (datasource "config").runner.log.dir }}
{{- end }}
{{- end }}
{{- end }}

# Check and kill any existing kyml processes before starting a new one
if pgrep -f "/opt/csghub/bin/kyml" >/dev/null; then
    pkill -f "/opt/csghub/bin/kyml"
    # Wait a moment for the process to terminate
    sleep 1
fi

# Start the new kyml process
/opt/csghub/bin/kyml -file {{ $chome }}/service/runner/yamls -create -kubeconfig /etc/csghub/.kube/config > {{ $logDir }}/auto_configure.log 2>&1 &