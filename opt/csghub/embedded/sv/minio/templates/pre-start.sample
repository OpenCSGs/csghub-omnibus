#!/bin/bash

# Redirect stderr -> stdout
exec 2>&1

# Exit if execute with any errors
set -e

{{- $envDir := "/opt/csghub/etc/minio/env" }}

# Clear all environment variable files
# rm -rf {{ $envDir }}/* || true

# Render environments
{{- $minio := (datasource "config").minio }}
{{- with $minio.auth }}
{{- file.Write (printf "%s/MINIO_ROOT_USER" $envDir) .user }}
{{- file.Write (printf "%s/MINIO_ROOT_PASSWORD" $envDir) (.password | default (crypto.PBKDF2 .user "opencsg" 2048 8)) }}
{{- file.Write (printf "%s/MINIO_CONSOLE_ADDRESS" $envDir) (.password | default (crypto.PBKDF2 .user "opencsg" 2048 8)) }}
{{- file.Write "/etc/csghub/init_minio_password" (printf "%s:%s" .user (.password | default (crypto.PBKDF2 .user "opencsg" 2048 8)) ) }}
{{- end }}

{{- $logger := (datasource "config").logger }}
{{- if $logger.enable }}
{{- file.Write (printf "%s/MINIO_AUDIT_WEBHOOK_ENABLE_PRIMARY" $envDir) "on" }}
{{- file.Write (printf "%s/MINIO_AUDIT_WEBHOOK_ENDPOINT_PRIMARY" $envDir) "http://localhost:9002/minio-logger" }}
{{- file.Write (printf "%s/MINIO_AUDIT_WEBHOOK_AUTH_TOKEN_PRIMARY" $envDir) (printf "Bearer %s" $logger.auth_token) }}
{{- end }}

{{- range $env, $value := $minio.environments }}
{{- $envFile := printf "%s/%s" $envDir $env }}
{{- file.Write $envFile $value }}
{{- end }}

