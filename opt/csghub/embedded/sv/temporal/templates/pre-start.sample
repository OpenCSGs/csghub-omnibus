#!/bin/bash

# Redirect stderr -> stdout
exec 2>&1

{{- $envDir := "/opt/csghub/etc/temporal/env" }}

# Clear all environment variable files
rm -rf {{ $envDir }}/* &>/dev/null

{{- $temporal := (datasource "config").temporal }}
echo {{ $temporal.listen | default "127.0.0.1:7233" }} > {{ $envDir }}/TEMPORAL_ADDRESS
echo {{ $temporal.retention | default "7d" }} > {{ $envDir }}/DEFAULT_NAMESPACE_RETENTION
echo "/opt/csghub/etc/temporal" > {{ $envDir }}/TEMPORAL_HOME
echo "http://localhost:3000" > {{ $envDir }}/TEMPORAL_CORS_ORIGINS
echo "true" > {{ $envDir }}/TEMPORAL_CSRF_COOKIE_INSECURE
echo "127.0.0.1" > {{ $envDir }}/BIND_ON_IP

{{- $dbname := "temporal" }}
{{- $password := crypto.PBKDF2 $dbname "opencsg" 2048 8 }}
{{- if has $temporal "db" }}
{{- $db := $temporal.db }}
echo "postgres12" > {{ $envDir }}/DB
{{- if $db.name }}
{{- $dbname = $db.name }}
{{- end }}
echo {{ $dbname }} > {{ $envDir }}/DBNAME
echo {{ $db.host | default "127.0.0.1" }} > {{ $envDir }}/POSTGRES_SEEDS
echo {{ $db.port | default 5432 }} > {{ $envDir }}/DB_PORT
echo {{ $db.user | default "temporal" }} > {{ $envDir }}/POSTGRES_USER
{{- if $db.password }}
{{- $password = $db.password }}
{{- end }}
echo {{ $password }} > {{ $envDir }}/POSTGRES_PWD
{{- end }}
# Create temporal database
/opt/csghub/service/postgresql/create_database {{ $dbname }} {{ $password }}
/opt/csghub/service/postgresql/create_database "temporal_visibility" {{ $password }}

exit 0