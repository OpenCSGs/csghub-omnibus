#!/bin/bash

# Redirect stderr -> stdout
exec 2>&1

{{- $envDir := "/opt/csghub/etc/server/env" }}
cd {{ $envDir }}

# Clear all environment variable files
rm -rf {{ $envDir }}/* || true

{{- file.Write (printf "%s/GIN_MODE" $envDir) "release" }}

{{- $server := (datasource "config").server }}
{{- $dataDir := $server.data | default "/var/opt/csghub/server" }}
{{- $db := $server.postgresql }}
{{- $dbname := $db.name }}
{{- $password := $db.password | default (crypto.PBKDF2 $dbname "opencsg" 2048 8) }}
{{- file.Write (printf "%s/POSTGRES_USER" $envDir) $dbname }}
{{- file.Write (printf "%s/POSTGRES_PASSWORD" $envDir) $password }}
{{- file.Write (printf "%s/POSTGRES_DB" $envDir) $dbname }}

# Create server database
/opt/csghub/service/postgresql/create_database {{ $dbname }} {{ $password }}

# exit when error
set -e

{{- $configDir := "/opt/csghub/etc/server" }}
{{- $configFile := printf "%s/config.toml" $dataDir }}

# Define constants
readonly SERVER_BIN="/opt/csghub/embedded/bin/csghub-server"
readonly ENV_DIR="/opt/csghub/etc/server/env"

# Build command arguments
args=("start" "server")
[[ -f "{{ $configFile }}" ]] && args=("--config={{ $configFile }}" "${args[@]}")

echo "Database setup..."
echo "Migration init"
chpst -e "$ENV_DIR" -P -u root:root "$SERVER_BIN" migration init "${args[@]}"

echo "Migration migrate"
chpst -e "$ENV_DIR" -P -u root:root "$SERVER_BIN" migration migrate "${args[@]}"

cd -
# Load local sql scripts
/opt/csghub/service/postgresql/exec_pg_scripts {{ $dbname }} {{ $password }}

# Create bucket
if [ -x "/opt/csghub/service/minio/create_bucket" ]; then
    /opt/csghub/service/minio/create_bucket {{ $server.s3.bucket }}
fi

exit 0