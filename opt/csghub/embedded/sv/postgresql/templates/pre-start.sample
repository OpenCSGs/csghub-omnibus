#!/bin/bash

# Redirect stderr -> stdout
exec 2>&1

# Exit if execute with any errors
set -e

{{- $envDir := "/opt/csghub/etc/postgresql/env" }}

# Clear all environment variable files
# rm -rf {{ $envDir }}/* || true

{{- $postgresql := (datasource "config").postgresql }}
{{- $dataDir := $postgresql.data_dir | default "/var/opt/csghub/postgresql/data" }}
chown -R postgres:postgres {{ $dataDir }} || true

{{- file.Write (printf "%s/PGHOME" $envDir) "/opt/csghub/embedded/sv/postgresql" }}
{{- file.Write (printf "%s/PGDATA" $envDir) $dataDir }}
{{- file.Write (printf "%s/LD_LIBRARY_PATH" $envDir) (printf "%s:%s/lib" (env.Getenv "LD_LIBRARY_PATH") (env.Getenv "PGHOME")) }}
{{- file.Write (printf "%s/MANPATH" $envDir) (printf "%s:%s/share/man" (env.Getenv "MANPATH") (env.Getenv "PGHOME")) }}
{{- file.Write (printf "%s/PATH" $envDir) (printf "%s/bin:$PATH" (env.Getenv "PGHOME")) }}

if [ ! -f "{{ $dataDir }}/PG_VERSION" ]; then
    if [ -f {{ $dataDir }}/postgresql.conf ]; then
        mv {{ $dataDir }}/*.conf {{ $dataDir }}/..
    fi

    echo "Initializing database cluster..."
    chpst -e {{ $envDir }} -P \
      -u postgres:postgres \
      /opt/csghub/embedded/bin/initdb --encoding=UTF8 -D {{ $dataDir }}

    if [ -f {{ $dataDir }}/../postgresql.conf ]; then
        mv {{ $dataDir }}/../*.conf {{ $dataDir }}/
    fi
fi


