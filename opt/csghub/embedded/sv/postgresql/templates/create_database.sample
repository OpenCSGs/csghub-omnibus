#!/bin/bash
# Purpose: Automatically create PostgreSQL database (with same-name user) and grant privileges
# Usage: ./create_pg_db.sh <database_name> [password]

set -euo pipefail  # Strict error handling

export PATH=/opt/csghub/embedded/bin/:$PATH

# Validate input parameter
if [ -z "$1" ] || [ -z "$2" ]; then
  echo -e "\033[31mError: Database name and user or password required!\033[0m"
  echo "Usage: $0 <database_name> <user> [password]"
  echo "Note: If password not provided, a random one will be generated"
  exit 1
fi

DB_NAME="$1"
USER_NAME="$2"

# Use provided password or generate random one
if [ -n "${3-}" ]; then
  PASSWORD="$3"
else
  PASSWORD=$(openssl rand -hex 12)  # Generate 12-character random password
fi

# Check if user already exists
if psql -U postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='$USER_NAME'" | grep -q 1; then
  echo -e "\033[34mNotice: User '$USER_NAME' already exists. (Skipping creation)\033[0m"
else
  # Execute database creation
  echo "Creating user $USER_NAME..."
  psql -U postgres -c "CREATE USER $USER_NAME WITH PASSWORD '$PASSWORD';"
  psql -U postgres -c "ALTER USER $USER_NAME WITH ENCRYPTED PASSWORD '$PASSWORD' CREATEDB;"
fi

# Check if database already exists
if psql -U postgres -tAc "SELECT 1 FROM pg_database WHERE datname='$DB_NAME'" | grep -q 1; then
  echo -e "\033[34mNotice: Database '$DB_NAME' already exists. (Skipping creation)\033[0m"
else
  echo "Creating database $DB_NAME..."
  psql -U postgres -c "CREATE DATABASE $DB_NAME
    WITH OWNER $USER_NAME
    ENCODING 'UTF8'
    TEMPLATE template0;"
fi

echo "Granting privileges..."
psql -U postgres -d "$DB_NAME" -c "GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $USER_NAME;"
psql -U postgres -d "$DB_NAME" -c "GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO $USER_NAME;"

# Output results
echo -e "\n\033[32mSuccessfully created!\033[0m"
echo "-------------------------------------"
echo "Database: $DB_NAME"
echo "Username: $USER_NAME"
echo "Password: ******"
echo "Connection: psql -h localhost -U $USER_NAME -d $DB_NAME"
echo "-------------------------------------"